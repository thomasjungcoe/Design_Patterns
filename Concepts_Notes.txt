What's a design pattern
    *   Design patterns are typical solutions to commonly occuring problems in software design.
        Kinda like pre-made blueprints that you can customize to solve a recurring design problem in your code.

What does the pattern consist of?
    * Intent
    * Motivation
    * Structure
    * Code example

Why should learn it?
    * Design patterns are a toolkit of tried and tested solutions to common problems in software design.
        Even if you never encounter these problems, knowing patterns is still useful becuase it teaches you how to solve all sorts of problems using 
        principles of object-oriented design
    * Design patterns define a common language that you and your teammates can use to communicate more efficiently.


Classification of patterns
    * Creational patterns provide object creation mechanisms that increase flexibility and reuse of existing code.
    * Structural patterns explain how to assemble objects and classes into larger structures, while keeping these structures flexible and efficient.
    * Behavioral patterns take care of effective communication and the assignment of responsibilities between objects.

Creational patterns
    * Factory Method
    * Abstract Factory
    * Builder
    * Prototype
    * Singleton

Structural patterns
    * Adapter
    * Bridge
    * Composite
    * Decorator
    * Facade
    * Flyweight
    * Proxy

Behavioral patterns
    * Chain of responsibilities
    * Command
    * Iterator
    * Mediator
    * Memento
    * Observer
    * State
    * Strategy
    * Template Method
    * Visitor
